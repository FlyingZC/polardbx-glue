// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: polarx_physical_backfill.proto

package com.mysql.cj.polarx.protobuf;

public final class PolarxPhysicalBackfill {
  private PolarxPhysicalBackfill() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TableInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Polarx.PhysicalBackfill.TableInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string table_schema = 1;</code>
     * @return Whether the tableSchema field is set.
     */
    boolean hasTableSchema();
    /**
     * <code>required string table_schema = 1;</code>
     * @return The tableSchema.
     */
    java.lang.String getTableSchema();
    /**
     * <code>required string table_schema = 1;</code>
     * @return The bytes for tableSchema.
     */
    com.google.protobuf.ByteString
    getTableSchemaBytes();

    /**
     * <code>required string table_name = 2;</code>
     * @return Whether the tableName field is set.
     */
    boolean hasTableName();
    /**
     * <code>required string table_name = 2;</code>
     * @return The tableName.
     */
    java.lang.String getTableName();
    /**
     * <code>required string table_name = 2;</code>
     * @return The bytes for tableName.
     */
    com.google.protobuf.ByteString
    getTableNameBytes();

    /**
     * <code>required bool partitioned = 3;</code>
     * @return Whether the partitioned field is set.
     */
    boolean hasPartitioned();
    /**
     * <code>required bool partitioned = 3;</code>
     * @return The partitioned.
     */
    boolean getPartitioned();

    /**
     * <code>repeated string physical_partition_name = 4;</code>
     * @return A list containing the physicalPartitionName.
     */
    java.util.List<java.lang.String>
    getPhysicalPartitionNameList();
    /**
     * <code>repeated string physical_partition_name = 4;</code>
     * @return The count of physicalPartitionName.
     */
    int getPhysicalPartitionNameCount();
    /**
     * <code>repeated string physical_partition_name = 4;</code>
     * @param index The index of the element to return.
     * @return The physicalPartitionName at the given index.
     */
    java.lang.String getPhysicalPartitionName(int index);
    /**
     * <code>repeated string physical_partition_name = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the physicalPartitionName at the given index.
     */
    com.google.protobuf.ByteString
    getPhysicalPartitionNameBytes(int index);

    /**
     * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
     */
    java.util.List<com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo>
    getFileInfoList();
    /**
     * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo getFileInfo(int index);
    /**
     * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
     */
    int getFileInfoCount();
    /**
     * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
     */
    java.util.List<? extends com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder>
    getFileInfoOrBuilderList();
    /**
     * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder getFileInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code Polarx.PhysicalBackfill.TableInfo}
   */
  public  static final class TableInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Polarx.PhysicalBackfill.TableInfo)
      TableInfoOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use TableInfo.newBuilder() to construct.
    private TableInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TableInfo() {
      tableSchema_ = "";
      tableName_ = "";
      physicalPartitionName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      fileInfo_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TableInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TableInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000001;
            tableSchema_ = bs;
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000002;
            tableName_ = bs;
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            partitioned_ = input.readBool();
            break;
          }
          case 34: {
            com.google.protobuf.ByteString bs = input.readBytes();
            if (!((mutable_bitField0_ & 0x00000008) != 0)) {
              physicalPartitionName_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000008;
            }
            physicalPartitionName_.add(bs);
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
              fileInfo_ = new java.util.ArrayList<com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo>();
              mutable_bitField0_ |= 0x00000010;
            }
            fileInfo_.add(
                input.readMessage(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.PARSER, extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          physicalPartitionName_ = physicalPartitionName_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000010) != 0)) {
          fileInfo_ = java.util.Collections.unmodifiableList(fileInfo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_TableInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_TableInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder.class);
    }

    private int bitField0_;
    public static final int TABLE_SCHEMA_FIELD_NUMBER = 1;
    private volatile java.lang.Object tableSchema_;
    /**
     * <code>required string table_schema = 1;</code>
     * @return Whether the tableSchema field is set.
     */
    public boolean hasTableSchema() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string table_schema = 1;</code>
     * @return The tableSchema.
     */
    public java.lang.String getTableSchema() {
      java.lang.Object ref = tableSchema_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tableSchema_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string table_schema = 1;</code>
     * @return The bytes for tableSchema.
     */
    public com.google.protobuf.ByteString
    getTableSchemaBytes() {
      java.lang.Object ref = tableSchema_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableSchema_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TABLE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object tableName_;
    /**
     * <code>required string table_name = 2;</code>
     * @return Whether the tableName field is set.
     */
    public boolean hasTableName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required string table_name = 2;</code>
     * @return The tableName.
     */
    public java.lang.String getTableName() {
      java.lang.Object ref = tableName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tableName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string table_name = 2;</code>
     * @return The bytes for tableName.
     */
    public com.google.protobuf.ByteString
    getTableNameBytes() {
      java.lang.Object ref = tableName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITIONED_FIELD_NUMBER = 3;
    private boolean partitioned_;
    /**
     * <code>required bool partitioned = 3;</code>
     * @return Whether the partitioned field is set.
     */
    public boolean hasPartitioned() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required bool partitioned = 3;</code>
     * @return The partitioned.
     */
    public boolean getPartitioned() {
      return partitioned_;
    }

    public static final int PHYSICAL_PARTITION_NAME_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList physicalPartitionName_;
    /**
     * <code>repeated string physical_partition_name = 4;</code>
     * @return A list containing the physicalPartitionName.
     */
    public com.google.protobuf.ProtocolStringList
    getPhysicalPartitionNameList() {
      return physicalPartitionName_;
    }
    /**
     * <code>repeated string physical_partition_name = 4;</code>
     * @return The count of physicalPartitionName.
     */
    public int getPhysicalPartitionNameCount() {
      return physicalPartitionName_.size();
    }
    /**
     * <code>repeated string physical_partition_name = 4;</code>
     * @param index The index of the element to return.
     * @return The physicalPartitionName at the given index.
     */
    public java.lang.String getPhysicalPartitionName(int index) {
      return physicalPartitionName_.get(index);
    }
    /**
     * <code>repeated string physical_partition_name = 4;</code>
     * @param index The index of the value to return.
     * @return The bytes of the physicalPartitionName at the given index.
     */
    public com.google.protobuf.ByteString
    getPhysicalPartitionNameBytes(int index) {
      return physicalPartitionName_.getByteString(index);
    }

    public static final int FILE_INFO_FIELD_NUMBER = 5;
    private java.util.List<com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo> fileInfo_;
    /**
     * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
     */
    public java.util.List<com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo> getFileInfoList() {
      return fileInfo_;
    }
    /**
     * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
     */
    public java.util.List<? extends com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder>
    getFileInfoOrBuilderList() {
      return fileInfo_;
    }
    /**
     * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
     */
    public int getFileInfoCount() {
      return fileInfo_.size();
    }
    /**
     * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo getFileInfo(int index) {
      return fileInfo_.get(index);
    }
    /**
     * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder getFileInfoOrBuilder(
        int index) {
      return fileInfo_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTableSchema()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTableName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPartitioned()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getFileInfoCount(); i++) {
        if (!getFileInfo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, tableSchema_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, tableName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeBool(3, partitioned_);
      }
      for (int i = 0; i < physicalPartitionName_.size(); i++) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, physicalPartitionName_.getRaw(i));
      }
      for (int i = 0; i < fileInfo_.size(); i++) {
        output.writeMessage(5, fileInfo_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, tableSchema_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, tableName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, partitioned_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < physicalPartitionName_.size(); i++) {
          dataSize += computeStringSizeNoTag(physicalPartitionName_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getPhysicalPartitionNameList().size();
      }
      for (int i = 0; i < fileInfo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(5, fileInfo_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo)) {
        return super.equals(obj);
      }
      com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo other = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo) obj;

      if (hasTableSchema() != other.hasTableSchema()) return false;
      if (hasTableSchema()) {
        if (!getTableSchema()
            .equals(other.getTableSchema())) return false;
      }
      if (hasTableName() != other.hasTableName()) return false;
      if (hasTableName()) {
        if (!getTableName()
            .equals(other.getTableName())) return false;
      }
      if (hasPartitioned() != other.hasPartitioned()) return false;
      if (hasPartitioned()) {
        if (getPartitioned()
            != other.getPartitioned()) return false;
      }
      if (!getPhysicalPartitionNameList()
          .equals(other.getPhysicalPartitionNameList())) return false;
      if (!getFileInfoList()
          .equals(other.getFileInfoList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasTableSchema()) {
        hash = (37 * hash) + TABLE_SCHEMA_FIELD_NUMBER;
        hash = (53 * hash) + getTableSchema().hashCode();
      }
      if (hasTableName()) {
        hash = (37 * hash) + TABLE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getTableName().hashCode();
      }
      if (hasPartitioned()) {
        hash = (37 * hash) + PARTITIONED_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getPartitioned());
      }
      if (getPhysicalPartitionNameCount() > 0) {
        hash = (37 * hash) + PHYSICAL_PARTITION_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPhysicalPartitionNameList().hashCode();
      }
      if (getFileInfoCount() > 0) {
        hash = (37 * hash) + FILE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getFileInfoList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Polarx.PhysicalBackfill.TableInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Polarx.PhysicalBackfill.TableInfo)
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_TableInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_TableInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder.class);
      }

      // Construct using com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
            .alwaysUseFieldBuilders) {
          getFileInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        tableSchema_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        tableName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        partitioned_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        physicalPartitionName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (fileInfoBuilder_ == null) {
          fileInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          fileInfoBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_TableInfo_descriptor;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo getDefaultInstanceForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo build() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo buildPartial() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo result = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tableSchema_ = tableSchema_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tableName_ = tableName_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.partitioned_ = partitioned_;
          to_bitField0_ |= 0x00000004;
        }
        if (((bitField0_ & 0x00000008) != 0)) {
          physicalPartitionName_ = physicalPartitionName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.physicalPartitionName_ = physicalPartitionName_;
        if (fileInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0)) {
            fileInfo_ = java.util.Collections.unmodifiableList(fileInfo_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.fileInfo_ = fileInfo_;
        } else {
          result.fileInfo_ = fileInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo) {
          return mergeFrom((com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo other) {
        if (other == com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance()) return this;
        if (other.hasTableSchema()) {
          bitField0_ |= 0x00000001;
          tableSchema_ = other.tableSchema_;
          onChanged();
        }
        if (other.hasTableName()) {
          bitField0_ |= 0x00000002;
          tableName_ = other.tableName_;
          onChanged();
        }
        if (other.hasPartitioned()) {
          setPartitioned(other.getPartitioned());
        }
        if (!other.physicalPartitionName_.isEmpty()) {
          if (physicalPartitionName_.isEmpty()) {
            physicalPartitionName_ = other.physicalPartitionName_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensurePhysicalPartitionNameIsMutable();
            physicalPartitionName_.addAll(other.physicalPartitionName_);
          }
          onChanged();
        }
        if (fileInfoBuilder_ == null) {
          if (!other.fileInfo_.isEmpty()) {
            if (fileInfo_.isEmpty()) {
              fileInfo_ = other.fileInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureFileInfoIsMutable();
              fileInfo_.addAll(other.fileInfo_);
            }
            onChanged();
          }
        } else {
          if (!other.fileInfo_.isEmpty()) {
            if (fileInfoBuilder_.isEmpty()) {
              fileInfoBuilder_.dispose();
              fileInfoBuilder_ = null;
              fileInfo_ = other.fileInfo_;
              bitField0_ = (bitField0_ & ~0x00000010);
              fileInfoBuilder_ =
                  com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                      getFileInfoFieldBuilder() : null;
            } else {
              fileInfoBuilder_.addAllMessages(other.fileInfo_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasTableSchema()) {
          return false;
        }
        if (!hasTableName()) {
          return false;
        }
        if (!hasPartitioned()) {
          return false;
        }
        for (int i = 0; i < getFileInfoCount(); i++) {
          if (!getFileInfo(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object tableSchema_ = "";
      /**
       * <code>required string table_schema = 1;</code>
       * @return Whether the tableSchema field is set.
       */
      public boolean hasTableSchema() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string table_schema = 1;</code>
       * @return The tableSchema.
       */
      public java.lang.String getTableSchema() {
        java.lang.Object ref = tableSchema_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tableSchema_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string table_schema = 1;</code>
       * @return The bytes for tableSchema.
       */
      public com.google.protobuf.ByteString
      getTableSchemaBytes() {
        java.lang.Object ref = tableSchema_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tableSchema_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string table_schema = 1;</code>
       * @param value The tableSchema to set.
       * @return This builder for chaining.
       */
      public Builder setTableSchema(
          java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        tableSchema_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string table_schema = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearTableSchema() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tableSchema_ = getDefaultInstance().getTableSchema();
        onChanged();
        return this;
      }
      /**
       * <code>required string table_schema = 1;</code>
       * @param value The bytes for tableSchema to set.
       * @return This builder for chaining.
       */
      public Builder setTableSchemaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        tableSchema_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tableName_ = "";
      /**
       * <code>required string table_name = 2;</code>
       * @return Whether the tableName field is set.
       */
      public boolean hasTableName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required string table_name = 2;</code>
       * @return The tableName.
       */
      public java.lang.String getTableName() {
        java.lang.Object ref = tableName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tableName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string table_name = 2;</code>
       * @return The bytes for tableName.
       */
      public com.google.protobuf.ByteString
      getTableNameBytes() {
        java.lang.Object ref = tableName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tableName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string table_name = 2;</code>
       * @param value The tableName to set.
       * @return This builder for chaining.
       */
      public Builder setTableName(
          java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        tableName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string table_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTableName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tableName_ = getDefaultInstance().getTableName();
        onChanged();
        return this;
      }
      /**
       * <code>required string table_name = 2;</code>
       * @param value The bytes for tableName to set.
       * @return This builder for chaining.
       */
      public Builder setTableNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        tableName_ = value;
        onChanged();
        return this;
      }

      private boolean partitioned_ ;
      /**
       * <code>required bool partitioned = 3;</code>
       * @return Whether the partitioned field is set.
       */
      public boolean hasPartitioned() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required bool partitioned = 3;</code>
       * @return The partitioned.
       */
      public boolean getPartitioned() {
        return partitioned_;
      }
      /**
       * <code>required bool partitioned = 3;</code>
       * @param value The partitioned to set.
       * @return This builder for chaining.
       */
      public Builder setPartitioned(boolean value) {
        bitField0_ |= 0x00000004;
        partitioned_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool partitioned = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearPartitioned() {
        bitField0_ = (bitField0_ & ~0x00000004);
        partitioned_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList physicalPartitionName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePhysicalPartitionNameIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          physicalPartitionName_ = new com.google.protobuf.LazyStringArrayList(physicalPartitionName_);
          bitField0_ |= 0x00000008;
        }
      }
      /**
       * <code>repeated string physical_partition_name = 4;</code>
       * @return A list containing the physicalPartitionName.
       */
      public com.google.protobuf.ProtocolStringList
      getPhysicalPartitionNameList() {
        return physicalPartitionName_.getUnmodifiableView();
      }
      /**
       * <code>repeated string physical_partition_name = 4;</code>
       * @return The count of physicalPartitionName.
       */
      public int getPhysicalPartitionNameCount() {
        return physicalPartitionName_.size();
      }
      /**
       * <code>repeated string physical_partition_name = 4;</code>
       * @param index The index of the element to return.
       * @return The physicalPartitionName at the given index.
       */
      public java.lang.String getPhysicalPartitionName(int index) {
        return physicalPartitionName_.get(index);
      }
      /**
       * <code>repeated string physical_partition_name = 4;</code>
       * @param index The index of the value to return.
       * @return The bytes of the physicalPartitionName at the given index.
       */
      public com.google.protobuf.ByteString
      getPhysicalPartitionNameBytes(int index) {
        return physicalPartitionName_.getByteString(index);
      }
      /**
       * <code>repeated string physical_partition_name = 4;</code>
       * @param index The index to set the value at.
       * @param value The physicalPartitionName to set.
       * @return This builder for chaining.
       */
      public Builder setPhysicalPartitionName(
          int index, java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePhysicalPartitionNameIsMutable();
        physicalPartitionName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string physical_partition_name = 4;</code>
       * @param value The physicalPartitionName to add.
       * @return This builder for chaining.
       */
      public Builder addPhysicalPartitionName(
          java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePhysicalPartitionNameIsMutable();
        physicalPartitionName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string physical_partition_name = 4;</code>
       * @param values The physicalPartitionName to add.
       * @return This builder for chaining.
       */
      public Builder addAllPhysicalPartitionName(
          java.lang.Iterable<java.lang.String> values) {
        ensurePhysicalPartitionNameIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, physicalPartitionName_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string physical_partition_name = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPhysicalPartitionName() {
        physicalPartitionName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string physical_partition_name = 4;</code>
       * @param value The bytes of the physicalPartitionName to add.
       * @return This builder for chaining.
       */
      public Builder addPhysicalPartitionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensurePhysicalPartitionNameIsMutable();
        physicalPartitionName_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo> fileInfo_ =
          java.util.Collections.emptyList();
      private void ensureFileInfoIsMutable() {
        if (!((bitField0_ & 0x00000010) != 0)) {
          fileInfo_ = new java.util.ArrayList<com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo>(fileInfo_);
          bitField0_ |= 0x00000010;
        }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder> fileInfoBuilder_;

      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public java.util.List<com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo> getFileInfoList() {
        if (fileInfoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(fileInfo_);
        } else {
          return fileInfoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public int getFileInfoCount() {
        if (fileInfoBuilder_ == null) {
          return fileInfo_.size();
        } else {
          return fileInfoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo getFileInfo(int index) {
        if (fileInfoBuilder_ == null) {
          return fileInfo_.get(index);
        } else {
          return fileInfoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public Builder setFileInfo(
          int index, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo value) {
        if (fileInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFileInfoIsMutable();
          fileInfo_.set(index, value);
          onChanged();
        } else {
          fileInfoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public Builder setFileInfo(
          int index, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder builderForValue) {
        if (fileInfoBuilder_ == null) {
          ensureFileInfoIsMutable();
          fileInfo_.set(index, builderForValue.build());
          onChanged();
        } else {
          fileInfoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public Builder addFileInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo value) {
        if (fileInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFileInfoIsMutable();
          fileInfo_.add(value);
          onChanged();
        } else {
          fileInfoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public Builder addFileInfo(
          int index, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo value) {
        if (fileInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureFileInfoIsMutable();
          fileInfo_.add(index, value);
          onChanged();
        } else {
          fileInfoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public Builder addFileInfo(
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder builderForValue) {
        if (fileInfoBuilder_ == null) {
          ensureFileInfoIsMutable();
          fileInfo_.add(builderForValue.build());
          onChanged();
        } else {
          fileInfoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public Builder addFileInfo(
          int index, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder builderForValue) {
        if (fileInfoBuilder_ == null) {
          ensureFileInfoIsMutable();
          fileInfo_.add(index, builderForValue.build());
          onChanged();
        } else {
          fileInfoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public Builder addAllFileInfo(
          java.lang.Iterable<? extends com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo> values) {
        if (fileInfoBuilder_ == null) {
          ensureFileInfoIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, fileInfo_);
          onChanged();
        } else {
          fileInfoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public Builder clearFileInfo() {
        if (fileInfoBuilder_ == null) {
          fileInfo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          fileInfoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public Builder removeFileInfo(int index) {
        if (fileInfoBuilder_ == null) {
          ensureFileInfoIsMutable();
          fileInfo_.remove(index);
          onChanged();
        } else {
          fileInfoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder getFileInfoBuilder(
          int index) {
        return getFileInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder getFileInfoOrBuilder(
          int index) {
        if (fileInfoBuilder_ == null) {
          return fileInfo_.get(index);  } else {
          return fileInfoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public java.util.List<? extends com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder>
      getFileInfoOrBuilderList() {
        if (fileInfoBuilder_ != null) {
          return fileInfoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(fileInfo_);
        }
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder addFileInfoBuilder() {
        return getFileInfoFieldBuilder().addBuilder(
            com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder addFileInfoBuilder(
          int index) {
        return getFileInfoFieldBuilder().addBuilder(
            index, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .Polarx.PhysicalBackfill.FileInfo file_info = 5;</code>
       */
      public java.util.List<com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder>
      getFileInfoBuilderList() {
        return getFileInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder>
      getFileInfoFieldBuilder() {
        if (fileInfoBuilder_ == null) {
          fileInfoBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder>(
              fileInfo_,
              ((bitField0_ & 0x00000010) != 0),
              getParentForChildren(),
              isClean());
          fileInfo_ = null;
        }
        return fileInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Polarx.PhysicalBackfill.TableInfo)
    }

    // @@protoc_insertion_point(class_scope:Polarx.PhysicalBackfill.TableInfo)
    private static final com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo();
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TableInfo>
        PARSER = new com.google.protobuf.AbstractParser<TableInfo>() {
      @java.lang.Override
      public TableInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TableInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TableInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TableInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FileInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Polarx.PhysicalBackfill.FileInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string directory = 1;</code>
     * @return Whether the directory field is set.
     */
    boolean hasDirectory();
    /**
     * <code>required string directory = 1;</code>
     * @return The directory.
     */
    java.lang.String getDirectory();
    /**
     * <code>required string directory = 1;</code>
     * @return The bytes for directory.
     */
    com.google.protobuf.ByteString
    getDirectoryBytes();

    /**
     * <code>required string file_name = 2;</code>
     * @return Whether the fileName field is set.
     */
    boolean hasFileName();
    /**
     * <code>required string file_name = 2;</code>
     * @return The fileName.
     */
    java.lang.String getFileName();
    /**
     * <code>required string file_name = 2;</code>
     * @return The bytes for fileName.
     */
    com.google.protobuf.ByteString
    getFileNameBytes();

    /**
     * <code>required string partition_name = 3 [default = ""];</code>
     * @return Whether the partitionName field is set.
     */
    boolean hasPartitionName();
    /**
     * <code>required string partition_name = 3 [default = ""];</code>
     * @return The partitionName.
     */
    java.lang.String getPartitionName();
    /**
     * <code>required string partition_name = 3 [default = ""];</code>
     * @return The bytes for partitionName.
     */
    com.google.protobuf.ByteString
    getPartitionNameBytes();

    /**
     * <code>optional uint64 data_size = 4;</code>
     * @return Whether the dataSize field is set.
     */
    boolean hasDataSize();
    /**
     * <code>optional uint64 data_size = 4;</code>
     * @return The dataSize.
     */
    long getDataSize();

    /**
     * <code>optional bool existence = 5;</code>
     * @return Whether the existence field is set.
     */
    boolean hasExistence();
    /**
     * <code>optional bool existence = 5;</code>
     * @return The existence.
     */
    boolean getExistence();

    /**
     * <code>optional bool temp_file = 6;</code>
     * @return Whether the tempFile field is set.
     */
    boolean hasTempFile();
    /**
     * <code>optional bool temp_file = 6;</code>
     * @return The tempFile.
     */
    boolean getTempFile();
  }
  /**
   * Protobuf type {@code Polarx.PhysicalBackfill.FileInfo}
   */
  public  static final class FileInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Polarx.PhysicalBackfill.FileInfo)
      FileInfoOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use FileInfo.newBuilder() to construct.
    private FileInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FileInfo() {
      directory_ = "";
      fileName_ = "";
      partitionName_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FileInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FileInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000001;
            directory_ = bs;
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000002;
            fileName_ = bs;
            break;
          }
          case 26: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000004;
            partitionName_ = bs;
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            dataSize_ = input.readUInt64();
            break;
          }
          case 40: {
            bitField0_ |= 0x00000010;
            existence_ = input.readBool();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            tempFile_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder.class);
    }

    private int bitField0_;
    public static final int DIRECTORY_FIELD_NUMBER = 1;
    private volatile java.lang.Object directory_;
    /**
     * <code>required string directory = 1;</code>
     * @return Whether the directory field is set.
     */
    public boolean hasDirectory() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string directory = 1;</code>
     * @return The directory.
     */
    public java.lang.String getDirectory() {
      java.lang.Object ref = directory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          directory_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string directory = 1;</code>
     * @return The bytes for directory.
     */
    public com.google.protobuf.ByteString
    getDirectoryBytes() {
      java.lang.Object ref = directory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        directory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int FILE_NAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object fileName_;
    /**
     * <code>required string file_name = 2;</code>
     * @return Whether the fileName field is set.
     */
    public boolean hasFileName() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required string file_name = 2;</code>
     * @return The fileName.
     */
    public java.lang.String getFileName() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          fileName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string file_name = 2;</code>
     * @return The bytes for fileName.
     */
    public com.google.protobuf.ByteString
    getFileNameBytes() {
      java.lang.Object ref = fileName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        fileName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PARTITION_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object partitionName_;
    /**
     * <code>required string partition_name = 3 [default = ""];</code>
     * @return Whether the partitionName field is set.
     */
    public boolean hasPartitionName() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>required string partition_name = 3 [default = ""];</code>
     * @return The partitionName.
     */
    public java.lang.String getPartitionName() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          partitionName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string partition_name = 3 [default = ""];</code>
     * @return The bytes for partitionName.
     */
    public com.google.protobuf.ByteString
    getPartitionNameBytes() {
      java.lang.Object ref = partitionName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        partitionName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DATA_SIZE_FIELD_NUMBER = 4;
    private long dataSize_;
    /**
     * <code>optional uint64 data_size = 4;</code>
     * @return Whether the dataSize field is set.
     */
    public boolean hasDataSize() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint64 data_size = 4;</code>
     * @return The dataSize.
     */
    public long getDataSize() {
      return dataSize_;
    }

    public static final int EXISTENCE_FIELD_NUMBER = 5;
    private boolean existence_;
    /**
     * <code>optional bool existence = 5;</code>
     * @return Whether the existence field is set.
     */
    public boolean hasExistence() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional bool existence = 5;</code>
     * @return The existence.
     */
    public boolean getExistence() {
      return existence_;
    }

    public static final int TEMP_FILE_FIELD_NUMBER = 6;
    private boolean tempFile_;
    /**
     * <code>optional bool temp_file = 6;</code>
     * @return Whether the tempFile field is set.
     */
    public boolean hasTempFile() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>optional bool temp_file = 6;</code>
     * @return The tempFile.
     */
    public boolean getTempFile() {
      return tempFile_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDirectory()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFileName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPartitionName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, directory_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, fileName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, partitionName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(4, dataSize_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBool(5, existence_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeBool(6, tempFile_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, directory_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, fileName_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, partitionName_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, dataSize_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, existence_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, tempFile_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo)) {
        return super.equals(obj);
      }
      com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo other = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo) obj;

      if (hasDirectory() != other.hasDirectory()) return false;
      if (hasDirectory()) {
        if (!getDirectory()
            .equals(other.getDirectory())) return false;
      }
      if (hasFileName() != other.hasFileName()) return false;
      if (hasFileName()) {
        if (!getFileName()
            .equals(other.getFileName())) return false;
      }
      if (hasPartitionName() != other.hasPartitionName()) return false;
      if (hasPartitionName()) {
        if (!getPartitionName()
            .equals(other.getPartitionName())) return false;
      }
      if (hasDataSize() != other.hasDataSize()) return false;
      if (hasDataSize()) {
        if (getDataSize()
            != other.getDataSize()) return false;
      }
      if (hasExistence() != other.hasExistence()) return false;
      if (hasExistence()) {
        if (getExistence()
            != other.getExistence()) return false;
      }
      if (hasTempFile() != other.hasTempFile()) return false;
      if (hasTempFile()) {
        if (getTempFile()
            != other.getTempFile()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDirectory()) {
        hash = (37 * hash) + DIRECTORY_FIELD_NUMBER;
        hash = (53 * hash) + getDirectory().hashCode();
      }
      if (hasFileName()) {
        hash = (37 * hash) + FILE_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getFileName().hashCode();
      }
      if (hasPartitionName()) {
        hash = (37 * hash) + PARTITION_NAME_FIELD_NUMBER;
        hash = (53 * hash) + getPartitionName().hashCode();
      }
      if (hasDataSize()) {
        hash = (37 * hash) + DATA_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getDataSize());
      }
      if (hasExistence()) {
        hash = (37 * hash) + EXISTENCE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getExistence());
      }
      if (hasTempFile()) {
        hash = (37 * hash) + TEMP_FILE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getTempFile());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Polarx.PhysicalBackfill.FileInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Polarx.PhysicalBackfill.FileInfo)
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder.class);
      }

      // Construct using com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
            .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        directory_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        fileName_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        partitionName_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        dataSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        existence_ = false;
        bitField0_ = (bitField0_ & ~0x00000010);
        tempFile_ = false;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileInfo_descriptor;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo getDefaultInstanceForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo build() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo buildPartial() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo result = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.directory_ = directory_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.fileName_ = fileName_;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          to_bitField0_ |= 0x00000004;
        }
        result.partitionName_ = partitionName_;
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.dataSize_ = dataSize_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.existence_ = existence_;
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.tempFile_ = tempFile_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo) {
          return mergeFrom((com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo other) {
        if (other == com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.getDefaultInstance()) return this;
        if (other.hasDirectory()) {
          bitField0_ |= 0x00000001;
          directory_ = other.directory_;
          onChanged();
        }
        if (other.hasFileName()) {
          bitField0_ |= 0x00000002;
          fileName_ = other.fileName_;
          onChanged();
        }
        if (other.hasPartitionName()) {
          bitField0_ |= 0x00000004;
          partitionName_ = other.partitionName_;
          onChanged();
        }
        if (other.hasDataSize()) {
          setDataSize(other.getDataSize());
        }
        if (other.hasExistence()) {
          setExistence(other.getExistence());
        }
        if (other.hasTempFile()) {
          setTempFile(other.getTempFile());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasDirectory()) {
          return false;
        }
        if (!hasFileName()) {
          return false;
        }
        if (!hasPartitionName()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object directory_ = "";
      /**
       * <code>required string directory = 1;</code>
       * @return Whether the directory field is set.
       */
      public boolean hasDirectory() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string directory = 1;</code>
       * @return The directory.
       */
      public java.lang.String getDirectory() {
        java.lang.Object ref = directory_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            directory_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string directory = 1;</code>
       * @return The bytes for directory.
       */
      public com.google.protobuf.ByteString
      getDirectoryBytes() {
        java.lang.Object ref = directory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          directory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string directory = 1;</code>
       * @param value The directory to set.
       * @return This builder for chaining.
       */
      public Builder setDirectory(
          java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        directory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string directory = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectory() {
        bitField0_ = (bitField0_ & ~0x00000001);
        directory_ = getDefaultInstance().getDirectory();
        onChanged();
        return this;
      }
      /**
       * <code>required string directory = 1;</code>
       * @param value The bytes for directory to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        directory_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object fileName_ = "";
      /**
       * <code>required string file_name = 2;</code>
       * @return Whether the fileName field is set.
       */
      public boolean hasFileName() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required string file_name = 2;</code>
       * @return The fileName.
       */
      public java.lang.String getFileName() {
        java.lang.Object ref = fileName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            fileName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string file_name = 2;</code>
       * @return The bytes for fileName.
       */
      public com.google.protobuf.ByteString
      getFileNameBytes() {
        java.lang.Object ref = fileName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          fileName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string file_name = 2;</code>
       * @param value The fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileName(
          java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        fileName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string file_name = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFileName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fileName_ = getDefaultInstance().getFileName();
        onChanged();
        return this;
      }
      /**
       * <code>required string file_name = 2;</code>
       * @param value The bytes for fileName to set.
       * @return This builder for chaining.
       */
      public Builder setFileNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        fileName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object partitionName_ = "";
      /**
       * <code>required string partition_name = 3 [default = ""];</code>
       * @return Whether the partitionName field is set.
       */
      public boolean hasPartitionName() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>required string partition_name = 3 [default = ""];</code>
       * @return The partitionName.
       */
      public java.lang.String getPartitionName() {
        java.lang.Object ref = partitionName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            partitionName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string partition_name = 3 [default = ""];</code>
       * @return The bytes for partitionName.
       */
      public com.google.protobuf.ByteString
      getPartitionNameBytes() {
        java.lang.Object ref = partitionName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          partitionName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string partition_name = 3 [default = ""];</code>
       * @param value The partitionName to set.
       * @return This builder for chaining.
       */
      public Builder setPartitionName(
          java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        partitionName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string partition_name = 3 [default = ""];</code>
       * @return This builder for chaining.
       */
      public Builder clearPartitionName() {
        bitField0_ = (bitField0_ & ~0x00000004);
        partitionName_ = getDefaultInstance().getPartitionName();
        onChanged();
        return this;
      }
      /**
       * <code>required string partition_name = 3 [default = ""];</code>
       * @param value The bytes for partitionName to set.
       * @return This builder for chaining.
       */
      public Builder setPartitionNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        partitionName_ = value;
        onChanged();
        return this;
      }

      private long dataSize_ ;
      /**
       * <code>optional uint64 data_size = 4;</code>
       * @return Whether the dataSize field is set.
       */
      public boolean hasDataSize() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint64 data_size = 4;</code>
       * @return The dataSize.
       */
      public long getDataSize() {
        return dataSize_;
      }
      /**
       * <code>optional uint64 data_size = 4;</code>
       * @param value The dataSize to set.
       * @return This builder for chaining.
       */
      public Builder setDataSize(long value) {
        bitField0_ |= 0x00000008;
        dataSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 data_size = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearDataSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        dataSize_ = 0L;
        onChanged();
        return this;
      }

      private boolean existence_ ;
      /**
       * <code>optional bool existence = 5;</code>
       * @return Whether the existence field is set.
       */
      public boolean hasExistence() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional bool existence = 5;</code>
       * @return The existence.
       */
      public boolean getExistence() {
        return existence_;
      }
      /**
       * <code>optional bool existence = 5;</code>
       * @param value The existence to set.
       * @return This builder for chaining.
       */
      public Builder setExistence(boolean value) {
        bitField0_ |= 0x00000010;
        existence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool existence = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearExistence() {
        bitField0_ = (bitField0_ & ~0x00000010);
        existence_ = false;
        onChanged();
        return this;
      }

      private boolean tempFile_ ;
      /**
       * <code>optional bool temp_file = 6;</code>
       * @return Whether the tempFile field is set.
       */
      public boolean hasTempFile() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>optional bool temp_file = 6;</code>
       * @return The tempFile.
       */
      public boolean getTempFile() {
        return tempFile_;
      }
      /**
       * <code>optional bool temp_file = 6;</code>
       * @param value The tempFile to set.
       * @return This builder for chaining.
       */
      public Builder setTempFile(boolean value) {
        bitField0_ |= 0x00000020;
        tempFile_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool temp_file = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTempFile() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tempFile_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Polarx.PhysicalBackfill.FileInfo)
    }

    // @@protoc_insertion_point(class_scope:Polarx.PhysicalBackfill.FileInfo)
    private static final com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo();
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FileInfo>
        PARSER = new com.google.protobuf.AbstractParser<FileInfo>() {
      @java.lang.Override
      public FileInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FileInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FileInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FileInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DiskInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Polarx.PhysicalBackfill.DiskInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string directory = 1;</code>
     * @return Whether the directory field is set.
     */
    boolean hasDirectory();
    /**
     * <code>required string directory = 1;</code>
     * @return The directory.
     */
    java.lang.String getDirectory();
    /**
     * <code>required string directory = 1;</code>
     * @return The bytes for directory.
     */
    com.google.protobuf.ByteString
    getDirectoryBytes();

    /**
     * <code>optional uint64 total_size = 2;</code>
     * @return Whether the totalSize field is set.
     */
    boolean hasTotalSize();
    /**
     * <code>optional uint64 total_size = 2;</code>
     * @return The totalSize.
     */
    long getTotalSize();

    /**
     * <code>optional uint64 free_size = 3;</code>
     * @return Whether the freeSize field is set.
     */
    boolean hasFreeSize();
    /**
     * <code>optional uint64 free_size = 3;</code>
     * @return The freeSize.
     */
    long getFreeSize();

    /**
     * <code>optional uint64 used_size = 4;</code>
     * @return Whether the usedSize field is set.
     */
    boolean hasUsedSize();
    /**
     * <code>optional uint64 used_size = 4;</code>
     * @return The usedSize.
     */
    long getUsedSize();
  }
  /**
   * Protobuf type {@code Polarx.PhysicalBackfill.DiskInfo}
   */
  public  static final class DiskInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Polarx.PhysicalBackfill.DiskInfo)
      DiskInfoOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use DiskInfo.newBuilder() to construct.
    private DiskInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DiskInfo() {
      directory_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DiskInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DiskInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000001;
            directory_ = bs;
            break;
          }
          case 16: {
            bitField0_ |= 0x00000002;
            totalSize_ = input.readUInt64();
            break;
          }
          case 24: {
            bitField0_ |= 0x00000004;
            freeSize_ = input.readUInt64();
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            usedSize_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_DiskInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_DiskInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder.class);
    }

    private int bitField0_;
    public static final int DIRECTORY_FIELD_NUMBER = 1;
    private volatile java.lang.Object directory_;
    /**
     * <code>required string directory = 1;</code>
     * @return Whether the directory field is set.
     */
    public boolean hasDirectory() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required string directory = 1;</code>
     * @return The directory.
     */
    public java.lang.String getDirectory() {
      java.lang.Object ref = directory_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          directory_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string directory = 1;</code>
     * @return The bytes for directory.
     */
    public com.google.protobuf.ByteString
    getDirectoryBytes() {
      java.lang.Object ref = directory_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        directory_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TOTAL_SIZE_FIELD_NUMBER = 2;
    private long totalSize_;
    /**
     * <code>optional uint64 total_size = 2;</code>
     * @return Whether the totalSize field is set.
     */
    public boolean hasTotalSize() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional uint64 total_size = 2;</code>
     * @return The totalSize.
     */
    public long getTotalSize() {
      return totalSize_;
    }

    public static final int FREE_SIZE_FIELD_NUMBER = 3;
    private long freeSize_;
    /**
     * <code>optional uint64 free_size = 3;</code>
     * @return Whether the freeSize field is set.
     */
    public boolean hasFreeSize() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional uint64 free_size = 3;</code>
     * @return The freeSize.
     */
    public long getFreeSize() {
      return freeSize_;
    }

    public static final int USED_SIZE_FIELD_NUMBER = 4;
    private long usedSize_;
    /**
     * <code>optional uint64 used_size = 4;</code>
     * @return Whether the usedSize field is set.
     */
    public boolean hasUsedSize() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>optional uint64 used_size = 4;</code>
     * @return The usedSize.
     */
    public long getUsedSize() {
      return usedSize_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasDirectory()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, directory_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeUInt64(2, totalSize_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeUInt64(3, freeSize_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(4, usedSize_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, directory_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(2, totalSize_);
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(3, freeSize_);
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, usedSize_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo)) {
        return super.equals(obj);
      }
      com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo other = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo) obj;

      if (hasDirectory() != other.hasDirectory()) return false;
      if (hasDirectory()) {
        if (!getDirectory()
            .equals(other.getDirectory())) return false;
      }
      if (hasTotalSize() != other.hasTotalSize()) return false;
      if (hasTotalSize()) {
        if (getTotalSize()
            != other.getTotalSize()) return false;
      }
      if (hasFreeSize() != other.hasFreeSize()) return false;
      if (hasFreeSize()) {
        if (getFreeSize()
            != other.getFreeSize()) return false;
      }
      if (hasUsedSize() != other.hasUsedSize()) return false;
      if (hasUsedSize()) {
        if (getUsedSize()
            != other.getUsedSize()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasDirectory()) {
        hash = (37 * hash) + DIRECTORY_FIELD_NUMBER;
        hash = (53 * hash) + getDirectory().hashCode();
      }
      if (hasTotalSize()) {
        hash = (37 * hash) + TOTAL_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getTotalSize());
      }
      if (hasFreeSize()) {
        hash = (37 * hash) + FREE_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFreeSize());
      }
      if (hasUsedSize()) {
        hash = (37 * hash) + USED_SIZE_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getUsedSize());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Polarx.PhysicalBackfill.DiskInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Polarx.PhysicalBackfill.DiskInfo)
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_DiskInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_DiskInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder.class);
      }

      // Construct using com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
            .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        directory_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        totalSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000002);
        freeSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000004);
        usedSize_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_DiskInfo_descriptor;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo getDefaultInstanceForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo build() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo buildPartial() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo result = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.directory_ = directory_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.totalSize_ = totalSize_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.freeSize_ = freeSize_;
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.usedSize_ = usedSize_;
          to_bitField0_ |= 0x00000008;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo) {
          return mergeFrom((com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo other) {
        if (other == com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance()) return this;
        if (other.hasDirectory()) {
          bitField0_ |= 0x00000001;
          directory_ = other.directory_;
          onChanged();
        }
        if (other.hasTotalSize()) {
          setTotalSize(other.getTotalSize());
        }
        if (other.hasFreeSize()) {
          setFreeSize(other.getFreeSize());
        }
        if (other.hasUsedSize()) {
          setUsedSize(other.getUsedSize());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasDirectory()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object directory_ = "";
      /**
       * <code>required string directory = 1;</code>
       * @return Whether the directory field is set.
       */
      public boolean hasDirectory() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required string directory = 1;</code>
       * @return The directory.
       */
      public java.lang.String getDirectory() {
        java.lang.Object ref = directory_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            directory_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string directory = 1;</code>
       * @return The bytes for directory.
       */
      public com.google.protobuf.ByteString
      getDirectoryBytes() {
        java.lang.Object ref = directory_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          directory_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string directory = 1;</code>
       * @param value The directory to set.
       * @return This builder for chaining.
       */
      public Builder setDirectory(
          java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        directory_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string directory = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearDirectory() {
        bitField0_ = (bitField0_ & ~0x00000001);
        directory_ = getDefaultInstance().getDirectory();
        onChanged();
        return this;
      }
      /**
       * <code>required string directory = 1;</code>
       * @param value The bytes for directory to set.
       * @return This builder for chaining.
       */
      public Builder setDirectoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        directory_ = value;
        onChanged();
        return this;
      }

      private long totalSize_ ;
      /**
       * <code>optional uint64 total_size = 2;</code>
       * @return Whether the totalSize field is set.
       */
      public boolean hasTotalSize() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional uint64 total_size = 2;</code>
       * @return The totalSize.
       */
      public long getTotalSize() {
        return totalSize_;
      }
      /**
       * <code>optional uint64 total_size = 2;</code>
       * @param value The totalSize to set.
       * @return This builder for chaining.
       */
      public Builder setTotalSize(long value) {
        bitField0_ |= 0x00000002;
        totalSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 total_size = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalSize() {
        bitField0_ = (bitField0_ & ~0x00000002);
        totalSize_ = 0L;
        onChanged();
        return this;
      }

      private long freeSize_ ;
      /**
       * <code>optional uint64 free_size = 3;</code>
       * @return Whether the freeSize field is set.
       */
      public boolean hasFreeSize() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional uint64 free_size = 3;</code>
       * @return The freeSize.
       */
      public long getFreeSize() {
        return freeSize_;
      }
      /**
       * <code>optional uint64 free_size = 3;</code>
       * @param value The freeSize to set.
       * @return This builder for chaining.
       */
      public Builder setFreeSize(long value) {
        bitField0_ |= 0x00000004;
        freeSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 free_size = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearFreeSize() {
        bitField0_ = (bitField0_ & ~0x00000004);
        freeSize_ = 0L;
        onChanged();
        return this;
      }

      private long usedSize_ ;
      /**
       * <code>optional uint64 used_size = 4;</code>
       * @return Whether the usedSize field is set.
       */
      public boolean hasUsedSize() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional uint64 used_size = 4;</code>
       * @return The usedSize.
       */
      public long getUsedSize() {
        return usedSize_;
      }
      /**
       * <code>optional uint64 used_size = 4;</code>
       * @param value The usedSize to set.
       * @return This builder for chaining.
       */
      public Builder setUsedSize(long value) {
        bitField0_ |= 0x00000008;
        usedSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 used_size = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearUsedSize() {
        bitField0_ = (bitField0_ & ~0x00000008);
        usedSize_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Polarx.PhysicalBackfill.DiskInfo)
    }

    // @@protoc_insertion_point(class_scope:Polarx.PhysicalBackfill.DiskInfo)
    private static final com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo();
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<DiskInfo>
        PARSER = new com.google.protobuf.AbstractParser<DiskInfo>() {
      @java.lang.Override
      public DiskInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DiskInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DiskInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DiskInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface GetFileInfoOperatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Polarx.PhysicalBackfill.GetFileInfoOperator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .Polarx.PhysicalBackfill.GetFileInfoOperator.Type operator_type = 1;</code>
     * @return Whether the operatorType field is set.
     */
    boolean hasOperatorType();
    /**
     * <code>required .Polarx.PhysicalBackfill.GetFileInfoOperator.Type operator_type = 1;</code>
     * @return The operatorType.
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type getOperatorType();

    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     * @return Whether the tableInfo field is set.
     */
    boolean hasTableInfo();
    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     * @return The tableInfo.
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo getTableInfo();
    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder getTableInfoOrBuilder();

    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     * @return Whether the diskInfo field is set.
     */
    boolean hasDiskInfo();
    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     * @return The diskInfo.
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo getDiskInfo();
    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder getDiskInfoOrBuilder();
  }
  /**
   * Protobuf type {@code Polarx.PhysicalBackfill.GetFileInfoOperator}
   */
  public  static final class GetFileInfoOperator extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Polarx.PhysicalBackfill.GetFileInfoOperator)
      GetFileInfoOperatorOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use GetFileInfoOperator.newBuilder() to construct.
    private GetFileInfoOperator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetFileInfoOperator() {
      operatorType_ = 1;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetFileInfoOperator();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetFileInfoOperator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
            @SuppressWarnings("deprecation")
            com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type value = com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              operatorType_ = rawValue;
            }
            break;
          }
          case 18: {
            com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) != 0)) {
              subBuilder = tableInfo_.toBuilder();
            }
            tableInfo_ = input.readMessage(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tableInfo_);
              tableInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
          case 26: {
            com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000004) != 0)) {
              subBuilder = diskInfo_.toBuilder();
            }
            diskInfo_ = input.readMessage(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(diskInfo_);
              diskInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000004;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_GetFileInfoOperator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_GetFileInfoOperator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Builder.class);
    }

    /**
     * Protobuf enum {@code Polarx.PhysicalBackfill.GetFileInfoOperator.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CHECK_SRC_FILE_EXISTENCE = 1;</code>
       */
      CHECK_SRC_FILE_EXISTENCE(1),
      /**
       * <code>CHECK_TAR_FILE_EXISTENCE = 2;</code>
       */
      CHECK_TAR_FILE_EXISTENCE(2),
      /**
       * <code>GET_TAR_IBD_DIR = 3;</code>
       */
      GET_TAR_IBD_DIR(3),
      /**
       * <code>GET_SRC_FILE_LEN = 4;</code>
       */
      GET_SRC_FILE_LEN(4),
      /**
       * <code>GET_SRC_DIR_FREE_SPACE = 5;</code>
       */
      GET_SRC_DIR_FREE_SPACE(5),
      /**
       * <code>GET_TAR_DIR_FREE_SPACE = 6;</code>
       */
      GET_TAR_DIR_FREE_SPACE(6),
      /**
       * <code>GET_SRC_IBD_TEMP_DIR = 7;</code>
       */
      GET_SRC_IBD_TEMP_DIR(7),
      /**
       * <code>GET_TAR_FILE_LEN = 8;</code>
       */
      GET_TAR_FILE_LEN(8),
      ;

      /**
       * <code>CHECK_SRC_FILE_EXISTENCE = 1;</code>
       */
      public static final int CHECK_SRC_FILE_EXISTENCE_VALUE = 1;
      /**
       * <code>CHECK_TAR_FILE_EXISTENCE = 2;</code>
       */
      public static final int CHECK_TAR_FILE_EXISTENCE_VALUE = 2;
      /**
       * <code>GET_TAR_IBD_DIR = 3;</code>
       */
      public static final int GET_TAR_IBD_DIR_VALUE = 3;
      /**
       * <code>GET_SRC_FILE_LEN = 4;</code>
       */
      public static final int GET_SRC_FILE_LEN_VALUE = 4;
      /**
       * <code>GET_SRC_DIR_FREE_SPACE = 5;</code>
       */
      public static final int GET_SRC_DIR_FREE_SPACE_VALUE = 5;
      /**
       * <code>GET_TAR_DIR_FREE_SPACE = 6;</code>
       */
      public static final int GET_TAR_DIR_FREE_SPACE_VALUE = 6;
      /**
       * <code>GET_SRC_IBD_TEMP_DIR = 7;</code>
       */
      public static final int GET_SRC_IBD_TEMP_DIR_VALUE = 7;
      /**
       * <code>GET_TAR_FILE_LEN = 8;</code>
       */
      public static final int GET_TAR_FILE_LEN_VALUE = 8;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
        case 1: return CHECK_SRC_FILE_EXISTENCE;
        case 2: return CHECK_TAR_FILE_EXISTENCE;
        case 3: return GET_TAR_IBD_DIR;
        case 4: return GET_SRC_FILE_LEN;
        case 5: return GET_SRC_DIR_FREE_SPACE;
        case 6: return GET_TAR_DIR_FREE_SPACE;
        case 7: return GET_SRC_IBD_TEMP_DIR;
        case 8: return GET_TAR_FILE_LEN;
        default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
      internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Polarx.PhysicalBackfill.GetFileInfoOperator.Type)
    }

    private int bitField0_;
    public static final int OPERATOR_TYPE_FIELD_NUMBER = 1;
    private int operatorType_;
    /**
     * <code>required .Polarx.PhysicalBackfill.GetFileInfoOperator.Type operator_type = 1;</code>
     * @return Whether the operatorType field is set.
     */
    public boolean hasOperatorType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .Polarx.PhysicalBackfill.GetFileInfoOperator.Type operator_type = 1;</code>
     * @return The operatorType.
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type getOperatorType() {
      @SuppressWarnings("deprecation")
      com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type result = com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type.valueOf(operatorType_);
      return result == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type.CHECK_SRC_FILE_EXISTENCE : result;
    }

    public static final int TABLE_INFO_FIELD_NUMBER = 2;
    private com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo tableInfo_;
    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     * @return Whether the tableInfo field is set.
     */
    public boolean hasTableInfo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     * @return The tableInfo.
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo getTableInfo() {
      return tableInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance() : tableInfo_;
    }
    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder getTableInfoOrBuilder() {
      return tableInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance() : tableInfo_;
    }

    public static final int DISK_INFO_FIELD_NUMBER = 3;
    private com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo diskInfo_;
    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     * @return Whether the diskInfo field is set.
     */
    public boolean hasDiskInfo() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     * @return The diskInfo.
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo getDiskInfo() {
      return diskInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance() : diskInfo_;
    }
    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder getDiskInfoOrBuilder() {
      return diskInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance() : diskInfo_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasOperatorType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTableInfo()) {
        if (!getTableInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasDiskInfo()) {
        if (!getDiskInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, operatorType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getTableInfo());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getDiskInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, operatorType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getTableInfo());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getDiskInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator)) {
        return super.equals(obj);
      }
      com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator other = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator) obj;

      if (hasOperatorType() != other.hasOperatorType()) return false;
      if (hasOperatorType()) {
        if (operatorType_ != other.operatorType_) return false;
      }
      if (hasTableInfo() != other.hasTableInfo()) return false;
      if (hasTableInfo()) {
        if (!getTableInfo()
            .equals(other.getTableInfo())) return false;
      }
      if (hasDiskInfo() != other.hasDiskInfo()) return false;
      if (hasDiskInfo()) {
        if (!getDiskInfo()
            .equals(other.getDiskInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOperatorType()) {
        hash = (37 * hash) + OPERATOR_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + operatorType_;
      }
      if (hasTableInfo()) {
        hash = (37 * hash) + TABLE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTableInfo().hashCode();
      }
      if (hasDiskInfo()) {
        hash = (37 * hash) + DISK_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getDiskInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Polarx.PhysicalBackfill.GetFileInfoOperator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Polarx.PhysicalBackfill.GetFileInfoOperator)
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_GetFileInfoOperator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_GetFileInfoOperator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Builder.class);
      }

      // Construct using com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
            .alwaysUseFieldBuilders) {
          getTableInfoFieldBuilder();
          getDiskInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        operatorType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tableInfoBuilder_ == null) {
          tableInfo_ = null;
        } else {
          tableInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (diskInfoBuilder_ == null) {
          diskInfo_ = null;
        } else {
          diskInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_GetFileInfoOperator_descriptor;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator getDefaultInstanceForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.getDefaultInstance();
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator build() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator buildPartial() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator result = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.operatorType_ = operatorType_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (tableInfoBuilder_ == null) {
            result.tableInfo_ = tableInfo_;
          } else {
            result.tableInfo_ = tableInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (diskInfoBuilder_ == null) {
            result.diskInfo_ = diskInfo_;
          } else {
            result.diskInfo_ = diskInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator) {
          return mergeFrom((com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator other) {
        if (other == com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.getDefaultInstance()) return this;
        if (other.hasOperatorType()) {
          setOperatorType(other.getOperatorType());
        }
        if (other.hasTableInfo()) {
          mergeTableInfo(other.getTableInfo());
        }
        if (other.hasDiskInfo()) {
          mergeDiskInfo(other.getDiskInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasOperatorType()) {
          return false;
        }
        if (hasTableInfo()) {
          if (!getTableInfo().isInitialized()) {
            return false;
          }
        }
        if (hasDiskInfo()) {
          if (!getDiskInfo().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int operatorType_ = 1;
      /**
       * <code>required .Polarx.PhysicalBackfill.GetFileInfoOperator.Type operator_type = 1;</code>
       * @return Whether the operatorType field is set.
       */
      public boolean hasOperatorType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.GetFileInfoOperator.Type operator_type = 1;</code>
       * @return The operatorType.
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type getOperatorType() {
        @SuppressWarnings("deprecation")
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type result = com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type.valueOf(operatorType_);
        return result == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type.CHECK_SRC_FILE_EXISTENCE : result;
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.GetFileInfoOperator.Type operator_type = 1;</code>
       * @param value The operatorType to set.
       * @return This builder for chaining.
       */
      public Builder setOperatorType(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        operatorType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.GetFileInfoOperator.Type operator_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperatorType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        operatorType_ = 1;
        onChanged();
        return this;
      }

      private com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo tableInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder> tableInfoBuilder_;
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       * @return Whether the tableInfo field is set.
       */
      public boolean hasTableInfo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       * @return The tableInfo.
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo getTableInfo() {
        if (tableInfoBuilder_ == null) {
          return tableInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance() : tableInfo_;
        } else {
          return tableInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public Builder setTableInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo value) {
        if (tableInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tableInfo_ = value;
          onChanged();
        } else {
          tableInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public Builder setTableInfo(
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder builderForValue) {
        if (tableInfoBuilder_ == null) {
          tableInfo_ = builderForValue.build();
          onChanged();
        } else {
          tableInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public Builder mergeTableInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo value) {
        if (tableInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              tableInfo_ != null &&
              tableInfo_ != com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance()) {
            tableInfo_ =
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.newBuilder(tableInfo_).mergeFrom(value).buildPartial();
          } else {
            tableInfo_ = value;
          }
          onChanged();
        } else {
          tableInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public Builder clearTableInfo() {
        if (tableInfoBuilder_ == null) {
          tableInfo_ = null;
          onChanged();
        } else {
          tableInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder getTableInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTableInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder getTableInfoOrBuilder() {
        if (tableInfoBuilder_ != null) {
          return tableInfoBuilder_.getMessageOrBuilder();
        } else {
          return tableInfo_ == null ?
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance() : tableInfo_;
        }
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder>
      getTableInfoFieldBuilder() {
        if (tableInfoBuilder_ == null) {
          tableInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder>(
              getTableInfo(),
              getParentForChildren(),
              isClean());
          tableInfo_ = null;
        }
        return tableInfoBuilder_;
      }

      private com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo diskInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder> diskInfoBuilder_;
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       * @return Whether the diskInfo field is set.
       */
      public boolean hasDiskInfo() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       * @return The diskInfo.
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo getDiskInfo() {
        if (diskInfoBuilder_ == null) {
          return diskInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance() : diskInfo_;
        } else {
          return diskInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public Builder setDiskInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo value) {
        if (diskInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          diskInfo_ = value;
          onChanged();
        } else {
          diskInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public Builder setDiskInfo(
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder builderForValue) {
        if (diskInfoBuilder_ == null) {
          diskInfo_ = builderForValue.build();
          onChanged();
        } else {
          diskInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public Builder mergeDiskInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo value) {
        if (diskInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              diskInfo_ != null &&
              diskInfo_ != com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance()) {
            diskInfo_ =
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.newBuilder(diskInfo_).mergeFrom(value).buildPartial();
          } else {
            diskInfo_ = value;
          }
          onChanged();
        } else {
          diskInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public Builder clearDiskInfo() {
        if (diskInfoBuilder_ == null) {
          diskInfo_ = null;
          onChanged();
        } else {
          diskInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder getDiskInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDiskInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder getDiskInfoOrBuilder() {
        if (diskInfoBuilder_ != null) {
          return diskInfoBuilder_.getMessageOrBuilder();
        } else {
          return diskInfo_ == null ?
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance() : diskInfo_;
        }
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder>
      getDiskInfoFieldBuilder() {
        if (diskInfoBuilder_ == null) {
          diskInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder>(
              getDiskInfo(),
              getParentForChildren(),
              isClean());
          diskInfo_ = null;
        }
        return diskInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Polarx.PhysicalBackfill.GetFileInfoOperator)
    }

    // @@protoc_insertion_point(class_scope:Polarx.PhysicalBackfill.GetFileInfoOperator)
    private static final com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator();
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<GetFileInfoOperator>
        PARSER = new com.google.protobuf.AbstractParser<GetFileInfoOperator>() {
      @java.lang.Override
      public GetFileInfoOperator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetFileInfoOperator(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetFileInfoOperator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetFileInfoOperator> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.GetFileInfoOperator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransferFileDataOperatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Polarx.PhysicalBackfill.TransferFileDataOperator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .Polarx.PhysicalBackfill.TransferFileDataOperator.Type operator_type = 1;</code>
     * @return Whether the operatorType field is set.
     */
    boolean hasOperatorType();
    /**
     * <code>required .Polarx.PhysicalBackfill.TransferFileDataOperator.Type operator_type = 1;</code>
     * @return The operatorType.
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type getOperatorType();

    /**
     * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
     * @return Whether the fileInfo field is set.
     */
    boolean hasFileInfo();
    /**
     * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
     * @return The fileInfo.
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo getFileInfo();
    /**
     * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder getFileInfoOrBuilder();

    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     * @return Whether the diskInfo field is set.
     */
    boolean hasDiskInfo();
    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     * @return The diskInfo.
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo getDiskInfo();
    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder getDiskInfoOrBuilder();

    /**
     * <code>required uint64 buffer_len = 4;</code>
     * @return Whether the bufferLen field is set.
     */
    boolean hasBufferLen();
    /**
     * <code>required uint64 buffer_len = 4;</code>
     * @return The bufferLen.
     */
    long getBufferLen();

    /**
     * <code>optional bytes buffer = 5;</code>
     * @return Whether the buffer field is set.
     */
    boolean hasBuffer();
    /**
     * <code>optional bytes buffer = 5;</code>
     * @return The buffer.
     */
    com.google.protobuf.ByteString getBuffer();

    /**
     * <code>required uint64 offset = 6;</code>
     * @return Whether the offset field is set.
     */
    boolean hasOffset();
    /**
     * <code>required uint64 offset = 6;</code>
     * @return The offset.
     */
    long getOffset();
  }
  /**
   * Protobuf type {@code Polarx.PhysicalBackfill.TransferFileDataOperator}
   */
  public  static final class TransferFileDataOperator extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Polarx.PhysicalBackfill.TransferFileDataOperator)
      TransferFileDataOperatorOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use TransferFileDataOperator.newBuilder() to construct.
    private TransferFileDataOperator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransferFileDataOperator() {
      operatorType_ = 1;
      buffer_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TransferFileDataOperator();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransferFileDataOperator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
            @SuppressWarnings("deprecation")
            com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type value = com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              operatorType_ = rawValue;
            }
            break;
          }
          case 18: {
            com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) != 0)) {
              subBuilder = fileInfo_.toBuilder();
            }
            fileInfo_ = input.readMessage(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(fileInfo_);
              fileInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
          case 26: {
            com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000004) != 0)) {
              subBuilder = diskInfo_.toBuilder();
            }
            diskInfo_ = input.readMessage(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(diskInfo_);
              diskInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000004;
            break;
          }
          case 32: {
            bitField0_ |= 0x00000008;
            bufferLen_ = input.readUInt64();
            break;
          }
          case 42: {
            bitField0_ |= 0x00000010;
            buffer_ = input.readBytes();
            break;
          }
          case 48: {
            bitField0_ |= 0x00000020;
            offset_ = input.readUInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_TransferFileDataOperator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_TransferFileDataOperator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Builder.class);
    }

    /**
     * Protobuf enum {@code Polarx.PhysicalBackfill.TransferFileDataOperator.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>GET_DATA_FROM_SRC_IBD = 1;</code>
       */
      GET_DATA_FROM_SRC_IBD(1),
      /**
       * <code>PUT_DATA_TO_TAR_IBD = 2;</code>
       */
      PUT_DATA_TO_TAR_IBD(2),
      ;

      /**
       * <code>GET_DATA_FROM_SRC_IBD = 1;</code>
       */
      public static final int GET_DATA_FROM_SRC_IBD_VALUE = 1;
      /**
       * <code>PUT_DATA_TO_TAR_IBD = 2;</code>
       */
      public static final int PUT_DATA_TO_TAR_IBD_VALUE = 2;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
        case 1: return GET_DATA_FROM_SRC_IBD;
        case 2: return PUT_DATA_TO_TAR_IBD;
        default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
      internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Polarx.PhysicalBackfill.TransferFileDataOperator.Type)
    }

    private int bitField0_;
    public static final int OPERATOR_TYPE_FIELD_NUMBER = 1;
    private int operatorType_;
    /**
     * <code>required .Polarx.PhysicalBackfill.TransferFileDataOperator.Type operator_type = 1;</code>
     * @return Whether the operatorType field is set.
     */
    public boolean hasOperatorType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .Polarx.PhysicalBackfill.TransferFileDataOperator.Type operator_type = 1;</code>
     * @return The operatorType.
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type getOperatorType() {
      @SuppressWarnings("deprecation")
      com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type result = com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type.valueOf(operatorType_);
      return result == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type.GET_DATA_FROM_SRC_IBD : result;
    }

    public static final int FILE_INFO_FIELD_NUMBER = 2;
    private com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo fileInfo_;
    /**
     * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
     * @return Whether the fileInfo field is set.
     */
    public boolean hasFileInfo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
     * @return The fileInfo.
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo getFileInfo() {
      return fileInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.getDefaultInstance() : fileInfo_;
    }
    /**
     * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder getFileInfoOrBuilder() {
      return fileInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.getDefaultInstance() : fileInfo_;
    }

    public static final int DISK_INFO_FIELD_NUMBER = 3;
    private com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo diskInfo_;
    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     * @return Whether the diskInfo field is set.
     */
    public boolean hasDiskInfo() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     * @return The diskInfo.
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo getDiskInfo() {
      return diskInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance() : diskInfo_;
    }
    /**
     * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder getDiskInfoOrBuilder() {
      return diskInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance() : diskInfo_;
    }

    public static final int BUFFER_LEN_FIELD_NUMBER = 4;
    private long bufferLen_;
    /**
     * <code>required uint64 buffer_len = 4;</code>
     * @return Whether the bufferLen field is set.
     */
    public boolean hasBufferLen() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <code>required uint64 buffer_len = 4;</code>
     * @return The bufferLen.
     */
    public long getBufferLen() {
      return bufferLen_;
    }

    public static final int BUFFER_FIELD_NUMBER = 5;
    private com.google.protobuf.ByteString buffer_;
    /**
     * <code>optional bytes buffer = 5;</code>
     * @return Whether the buffer field is set.
     */
    public boolean hasBuffer() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <code>optional bytes buffer = 5;</code>
     * @return The buffer.
     */
    public com.google.protobuf.ByteString getBuffer() {
      return buffer_;
    }

    public static final int OFFSET_FIELD_NUMBER = 6;
    private long offset_;
    /**
     * <code>required uint64 offset = 6;</code>
     * @return Whether the offset field is set.
     */
    public boolean hasOffset() {
      return ((bitField0_ & 0x00000020) != 0);
    }
    /**
     * <code>required uint64 offset = 6;</code>
     * @return The offset.
     */
    public long getOffset() {
      return offset_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasOperatorType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasFileInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBufferLen()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasOffset()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getFileInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasDiskInfo()) {
        if (!getDiskInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, operatorType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getFileInfo());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getDiskInfo());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeUInt64(4, bufferLen_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeBytes(5, buffer_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        output.writeUInt64(6, offset_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, operatorType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getFileInfo());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, getDiskInfo());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(4, bufferLen_);
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, buffer_);
      }
      if (((bitField0_ & 0x00000020) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeUInt64Size(6, offset_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator)) {
        return super.equals(obj);
      }
      com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator other = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator) obj;

      if (hasOperatorType() != other.hasOperatorType()) return false;
      if (hasOperatorType()) {
        if (operatorType_ != other.operatorType_) return false;
      }
      if (hasFileInfo() != other.hasFileInfo()) return false;
      if (hasFileInfo()) {
        if (!getFileInfo()
            .equals(other.getFileInfo())) return false;
      }
      if (hasDiskInfo() != other.hasDiskInfo()) return false;
      if (hasDiskInfo()) {
        if (!getDiskInfo()
            .equals(other.getDiskInfo())) return false;
      }
      if (hasBufferLen() != other.hasBufferLen()) return false;
      if (hasBufferLen()) {
        if (getBufferLen()
            != other.getBufferLen()) return false;
      }
      if (hasBuffer() != other.hasBuffer()) return false;
      if (hasBuffer()) {
        if (!getBuffer()
            .equals(other.getBuffer())) return false;
      }
      if (hasOffset() != other.hasOffset()) return false;
      if (hasOffset()) {
        if (getOffset()
            != other.getOffset()) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOperatorType()) {
        hash = (37 * hash) + OPERATOR_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + operatorType_;
      }
      if (hasFileInfo()) {
        hash = (37 * hash) + FILE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getFileInfo().hashCode();
      }
      if (hasDiskInfo()) {
        hash = (37 * hash) + DISK_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getDiskInfo().hashCode();
      }
      if (hasBufferLen()) {
        hash = (37 * hash) + BUFFER_LEN_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getBufferLen());
      }
      if (hasBuffer()) {
        hash = (37 * hash) + BUFFER_FIELD_NUMBER;
        hash = (53 * hash) + getBuffer().hashCode();
      }
      if (hasOffset()) {
        hash = (37 * hash) + OFFSET_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getOffset());
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Polarx.PhysicalBackfill.TransferFileDataOperator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Polarx.PhysicalBackfill.TransferFileDataOperator)
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_TransferFileDataOperator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_TransferFileDataOperator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Builder.class);
      }

      // Construct using com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
            .alwaysUseFieldBuilders) {
          getFileInfoFieldBuilder();
          getDiskInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        operatorType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (fileInfoBuilder_ == null) {
          fileInfo_ = null;
        } else {
          fileInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (diskInfoBuilder_ == null) {
          diskInfo_ = null;
        } else {
          diskInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        bufferLen_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000008);
        buffer_ = com.google.protobuf.ByteString.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        offset_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_TransferFileDataOperator_descriptor;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator getDefaultInstanceForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.getDefaultInstance();
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator build() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator buildPartial() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator result = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.operatorType_ = operatorType_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (fileInfoBuilder_ == null) {
            result.fileInfo_ = fileInfo_;
          } else {
            result.fileInfo_ = fileInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          if (diskInfoBuilder_ == null) {
            result.diskInfo_ = diskInfo_;
          } else {
            result.diskInfo_ = diskInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.bufferLen_ = bufferLen_;
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          to_bitField0_ |= 0x00000010;
        }
        result.buffer_ = buffer_;
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.offset_ = offset_;
          to_bitField0_ |= 0x00000020;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator) {
          return mergeFrom((com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator other) {
        if (other == com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.getDefaultInstance()) return this;
        if (other.hasOperatorType()) {
          setOperatorType(other.getOperatorType());
        }
        if (other.hasFileInfo()) {
          mergeFileInfo(other.getFileInfo());
        }
        if (other.hasDiskInfo()) {
          mergeDiskInfo(other.getDiskInfo());
        }
        if (other.hasBufferLen()) {
          setBufferLen(other.getBufferLen());
        }
        if (other.hasBuffer()) {
          setBuffer(other.getBuffer());
        }
        if (other.hasOffset()) {
          setOffset(other.getOffset());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasOperatorType()) {
          return false;
        }
        if (!hasFileInfo()) {
          return false;
        }
        if (!hasBufferLen()) {
          return false;
        }
        if (!hasOffset()) {
          return false;
        }
        if (!getFileInfo().isInitialized()) {
          return false;
        }
        if (hasDiskInfo()) {
          if (!getDiskInfo().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int operatorType_ = 1;
      /**
       * <code>required .Polarx.PhysicalBackfill.TransferFileDataOperator.Type operator_type = 1;</code>
       * @return Whether the operatorType field is set.
       */
      public boolean hasOperatorType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.TransferFileDataOperator.Type operator_type = 1;</code>
       * @return The operatorType.
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type getOperatorType() {
        @SuppressWarnings("deprecation")
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type result = com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type.valueOf(operatorType_);
        return result == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type.GET_DATA_FROM_SRC_IBD : result;
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.TransferFileDataOperator.Type operator_type = 1;</code>
       * @param value The operatorType to set.
       * @return This builder for chaining.
       */
      public Builder setOperatorType(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        operatorType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.TransferFileDataOperator.Type operator_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperatorType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        operatorType_ = 1;
        onChanged();
        return this;
      }

      private com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo fileInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder> fileInfoBuilder_;
      /**
       * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
       * @return Whether the fileInfo field is set.
       */
      public boolean hasFileInfo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
       * @return The fileInfo.
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo getFileInfo() {
        if (fileInfoBuilder_ == null) {
          return fileInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.getDefaultInstance() : fileInfo_;
        } else {
          return fileInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
       */
      public Builder setFileInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo value) {
        if (fileInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fileInfo_ = value;
          onChanged();
        } else {
          fileInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
       */
      public Builder setFileInfo(
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder builderForValue) {
        if (fileInfoBuilder_ == null) {
          fileInfo_ = builderForValue.build();
          onChanged();
        } else {
          fileInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
       */
      public Builder mergeFileInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo value) {
        if (fileInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              fileInfo_ != null &&
              fileInfo_ != com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.getDefaultInstance()) {
            fileInfo_ =
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.newBuilder(fileInfo_).mergeFrom(value).buildPartial();
          } else {
            fileInfo_ = value;
          }
          onChanged();
        } else {
          fileInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
       */
      public Builder clearFileInfo() {
        if (fileInfoBuilder_ == null) {
          fileInfo_ = null;
          onChanged();
        } else {
          fileInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder getFileInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getFileInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder getFileInfoOrBuilder() {
        if (fileInfoBuilder_ != null) {
          return fileInfoBuilder_.getMessageOrBuilder();
        } else {
          return fileInfo_ == null ?
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.getDefaultInstance() : fileInfo_;
        }
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileInfo file_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder>
      getFileInfoFieldBuilder() {
        if (fileInfoBuilder_ == null) {
          fileInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileInfoOrBuilder>(
              getFileInfo(),
              getParentForChildren(),
              isClean());
          fileInfo_ = null;
        }
        return fileInfoBuilder_;
      }

      private com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo diskInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder> diskInfoBuilder_;
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       * @return Whether the diskInfo field is set.
       */
      public boolean hasDiskInfo() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       * @return The diskInfo.
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo getDiskInfo() {
        if (diskInfoBuilder_ == null) {
          return diskInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance() : diskInfo_;
        } else {
          return diskInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public Builder setDiskInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo value) {
        if (diskInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          diskInfo_ = value;
          onChanged();
        } else {
          diskInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public Builder setDiskInfo(
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder builderForValue) {
        if (diskInfoBuilder_ == null) {
          diskInfo_ = builderForValue.build();
          onChanged();
        } else {
          diskInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public Builder mergeDiskInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo value) {
        if (diskInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
              diskInfo_ != null &&
              diskInfo_ != com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance()) {
            diskInfo_ =
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.newBuilder(diskInfo_).mergeFrom(value).buildPartial();
          } else {
            diskInfo_ = value;
          }
          onChanged();
        } else {
          diskInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public Builder clearDiskInfo() {
        if (diskInfoBuilder_ == null) {
          diskInfo_ = null;
          onChanged();
        } else {
          diskInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder getDiskInfoBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getDiskInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder getDiskInfoOrBuilder() {
        if (diskInfoBuilder_ != null) {
          return diskInfoBuilder_.getMessageOrBuilder();
        } else {
          return diskInfo_ == null ?
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.getDefaultInstance() : diskInfo_;
        }
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.DiskInfo disk_info = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder>
      getDiskInfoFieldBuilder() {
        if (diskInfoBuilder_ == null) {
          diskInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.DiskInfoOrBuilder>(
              getDiskInfo(),
              getParentForChildren(),
              isClean());
          diskInfo_ = null;
        }
        return diskInfoBuilder_;
      }

      private long bufferLen_ ;
      /**
       * <code>required uint64 buffer_len = 4;</code>
       * @return Whether the bufferLen field is set.
       */
      public boolean hasBufferLen() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>required uint64 buffer_len = 4;</code>
       * @return The bufferLen.
       */
      public long getBufferLen() {
        return bufferLen_;
      }
      /**
       * <code>required uint64 buffer_len = 4;</code>
       * @param value The bufferLen to set.
       * @return This builder for chaining.
       */
      public Builder setBufferLen(long value) {
        bitField0_ |= 0x00000008;
        bufferLen_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 buffer_len = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearBufferLen() {
        bitField0_ = (bitField0_ & ~0x00000008);
        bufferLen_ = 0L;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString buffer_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>optional bytes buffer = 5;</code>
       * @return Whether the buffer field is set.
       */
      public boolean hasBuffer() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <code>optional bytes buffer = 5;</code>
       * @return The buffer.
       */
      public com.google.protobuf.ByteString getBuffer() {
        return buffer_;
      }
      /**
       * <code>optional bytes buffer = 5;</code>
       * @param value The buffer to set.
       * @return This builder for chaining.
       */
      public Builder setBuffer(com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        buffer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bytes buffer = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearBuffer() {
        bitField0_ = (bitField0_ & ~0x00000010);
        buffer_ = getDefaultInstance().getBuffer();
        onChanged();
        return this;
      }

      private long offset_ ;
      /**
       * <code>required uint64 offset = 6;</code>
       * @return Whether the offset field is set.
       */
      public boolean hasOffset() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <code>required uint64 offset = 6;</code>
       * @return The offset.
       */
      public long getOffset() {
        return offset_;
      }
      /**
       * <code>required uint64 offset = 6;</code>
       * @param value The offset to set.
       * @return This builder for chaining.
       */
      public Builder setOffset(long value) {
        bitField0_ |= 0x00000020;
        offset_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint64 offset = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearOffset() {
        bitField0_ = (bitField0_ & ~0x00000020);
        offset_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Polarx.PhysicalBackfill.TransferFileDataOperator)
    }

    // @@protoc_insertion_point(class_scope:Polarx.PhysicalBackfill.TransferFileDataOperator)
    private static final com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator();
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<TransferFileDataOperator>
        PARSER = new com.google.protobuf.AbstractParser<TransferFileDataOperator>() {
      @java.lang.Override
      public TransferFileDataOperator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransferFileDataOperator(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransferFileDataOperator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransferFileDataOperator> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TransferFileDataOperator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FileManageOperatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Polarx.PhysicalBackfill.FileManageOperator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .Polarx.PhysicalBackfill.FileManageOperator.Type operator_type = 1;</code>
     * @return Whether the operatorType field is set.
     */
    boolean hasOperatorType();
    /**
     * <code>required .Polarx.PhysicalBackfill.FileManageOperator.Type operator_type = 1;</code>
     * @return The operatorType.
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type getOperatorType();

    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     * @return Whether the tableInfo field is set.
     */
    boolean hasTableInfo();
    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     * @return The tableInfo.
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo getTableInfo();
    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     */
    com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder getTableInfoOrBuilder();
  }
  /**
   * Protobuf type {@code Polarx.PhysicalBackfill.FileManageOperator}
   */
  public  static final class FileManageOperator extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Polarx.PhysicalBackfill.FileManageOperator)
      FileManageOperatorOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use FileManageOperator.newBuilder() to construct.
    private FileManageOperator(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FileManageOperator() {
      operatorType_ = 1;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FileManageOperator();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FileManageOperator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            int rawValue = input.readEnum();
            @SuppressWarnings("deprecation")
            com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type value = com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type.valueOf(rawValue);
            if (value == null) {
              unknownFields.mergeVarintField(1, rawValue);
            } else {
              bitField0_ |= 0x00000001;
              operatorType_ = rawValue;
            }
            break;
          }
          case 18: {
            com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder subBuilder = null;
            if (((bitField0_ & 0x00000002) != 0)) {
              subBuilder = tableInfo_.toBuilder();
            }
            tableInfo_ = input.readMessage(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.PARSER, extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tableInfo_);
              tableInfo_ = subBuilder.buildPartial();
            }
            bitField0_ |= 0x00000002;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileManageOperator_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileManageOperator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Builder.class);
    }

    /**
     * Protobuf enum {@code Polarx.PhysicalBackfill.FileManageOperator.Type}
     */
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>CREATE_TEMP_DIR_IN_SRC = 1;</code>
       */
      CREATE_TEMP_DIR_IN_SRC(1),
      /**
       * <code>COPY_IBD_TO_TEMP_DIR_IN_SRC = 2;</code>
       */
      COPY_IBD_TO_TEMP_DIR_IN_SRC(2),
      /**
       * <code>DELETE_IBD_FROM_TEMP_DIR_IN_SRC = 3;</code>
       */
      DELETE_IBD_FROM_TEMP_DIR_IN_SRC(3),
      /**
       * <code>FLUSH_TABLE_IN_SRC = 4;</code>
       */
      FLUSH_TABLE_IN_SRC(4),
      /**
       * <code>UNLOCK_TABLE_IN_SRC = 5;</code>
       */
      UNLOCK_TABLE_IN_SRC(5),
      /**
       * <code>DELETE_TEMP_DIR_IN_SRC = 6;</code>
       */
      DELETE_TEMP_DIR_IN_SRC(6),
      /**
       * <code>FALLOCATE_IBD = 7;</code>
       */
      FALLOCATE_IBD(7),
      ;

      /**
       * <code>CREATE_TEMP_DIR_IN_SRC = 1;</code>
       */
      public static final int CREATE_TEMP_DIR_IN_SRC_VALUE = 1;
      /**
       * <code>COPY_IBD_TO_TEMP_DIR_IN_SRC = 2;</code>
       */
      public static final int COPY_IBD_TO_TEMP_DIR_IN_SRC_VALUE = 2;
      /**
       * <code>DELETE_IBD_FROM_TEMP_DIR_IN_SRC = 3;</code>
       */
      public static final int DELETE_IBD_FROM_TEMP_DIR_IN_SRC_VALUE = 3;
      /**
       * <code>FLUSH_TABLE_IN_SRC = 4;</code>
       */
      public static final int FLUSH_TABLE_IN_SRC_VALUE = 4;
      /**
       * <code>UNLOCK_TABLE_IN_SRC = 5;</code>
       */
      public static final int UNLOCK_TABLE_IN_SRC_VALUE = 5;
      /**
       * <code>DELETE_TEMP_DIR_IN_SRC = 6;</code>
       */
      public static final int DELETE_TEMP_DIR_IN_SRC_VALUE = 6;
      /**
       * <code>FALLOCATE_IBD = 7;</code>
       */
      public static final int FALLOCATE_IBD_VALUE = 7;


      public final int getNumber() {
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Type valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Type forNumber(int value) {
        switch (value) {
        case 1: return CREATE_TEMP_DIR_IN_SRC;
        case 2: return COPY_IBD_TO_TEMP_DIR_IN_SRC;
        case 3: return DELETE_IBD_FROM_TEMP_DIR_IN_SRC;
        case 4: return FLUSH_TABLE_IN_SRC;
        case 5: return UNLOCK_TABLE_IN_SRC;
        case 6: return DELETE_TEMP_DIR_IN_SRC;
        case 7: return FALLOCATE_IBD;
        default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Type>
      internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Type> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Type>() {
            public Type findValueByNumber(int number) {
              return Type.forNumber(number);
            }
          };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.getDescriptor().getEnumTypes().get(0);
      }

      private static final Type[] VALUES = values();

      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
              "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Type(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:Polarx.PhysicalBackfill.FileManageOperator.Type)
    }

    private int bitField0_;
    public static final int OPERATOR_TYPE_FIELD_NUMBER = 1;
    private int operatorType_;
    /**
     * <code>required .Polarx.PhysicalBackfill.FileManageOperator.Type operator_type = 1;</code>
     * @return Whether the operatorType field is set.
     */
    public boolean hasOperatorType() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required .Polarx.PhysicalBackfill.FileManageOperator.Type operator_type = 1;</code>
     * @return The operatorType.
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type getOperatorType() {
      @SuppressWarnings("deprecation")
      com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type result = com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type.valueOf(operatorType_);
      return result == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type.CREATE_TEMP_DIR_IN_SRC : result;
    }

    public static final int TABLE_INFO_FIELD_NUMBER = 2;
    private com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo tableInfo_;
    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     * @return Whether the tableInfo field is set.
     */
    public boolean hasTableInfo() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     * @return The tableInfo.
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo getTableInfo() {
      return tableInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance() : tableInfo_;
    }
    /**
     * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
     */
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder getTableInfoOrBuilder() {
      return tableInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance() : tableInfo_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasOperatorType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasTableInfo()) {
        if (!getTableInfo().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeEnum(1, operatorType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getTableInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(1, operatorType_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, getTableInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator)) {
        return super.equals(obj);
      }
      com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator other = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator) obj;

      if (hasOperatorType() != other.hasOperatorType()) return false;
      if (hasOperatorType()) {
        if (operatorType_ != other.operatorType_) return false;
      }
      if (hasTableInfo() != other.hasTableInfo()) return false;
      if (hasTableInfo()) {
        if (!getTableInfo()
            .equals(other.getTableInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasOperatorType()) {
        hash = (37 * hash) + OPERATOR_TYPE_FIELD_NUMBER;
        hash = (53 * hash) + operatorType_;
      }
      if (hasTableInfo()) {
        hash = (37 * hash) + TABLE_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getTableInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Polarx.PhysicalBackfill.FileManageOperator}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Polarx.PhysicalBackfill.FileManageOperator)
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileManageOperator_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileManageOperator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Builder.class);
      }

      // Construct using com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
            .alwaysUseFieldBuilders) {
          getTableInfoFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        operatorType_ = 1;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (tableInfoBuilder_ == null) {
          tableInfo_ = null;
        } else {
          tableInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileManageOperator_descriptor;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator getDefaultInstanceForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.getDefaultInstance();
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator build() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator buildPartial() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator result = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          to_bitField0_ |= 0x00000001;
        }
        result.operatorType_ = operatorType_;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          if (tableInfoBuilder_ == null) {
            result.tableInfo_ = tableInfo_;
          } else {
            result.tableInfo_ = tableInfoBuilder_.build();
          }
          to_bitField0_ |= 0x00000002;
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator) {
          return mergeFrom((com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator other) {
        if (other == com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.getDefaultInstance()) return this;
        if (other.hasOperatorType()) {
          setOperatorType(other.getOperatorType());
        }
        if (other.hasTableInfo()) {
          mergeTableInfo(other.getTableInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasOperatorType()) {
          return false;
        }
        if (hasTableInfo()) {
          if (!getTableInfo().isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int operatorType_ = 1;
      /**
       * <code>required .Polarx.PhysicalBackfill.FileManageOperator.Type operator_type = 1;</code>
       * @return Whether the operatorType field is set.
       */
      public boolean hasOperatorType() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileManageOperator.Type operator_type = 1;</code>
       * @return The operatorType.
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type getOperatorType() {
        @SuppressWarnings("deprecation")
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type result = com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type.valueOf(operatorType_);
        return result == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type.CREATE_TEMP_DIR_IN_SRC : result;
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileManageOperator.Type operator_type = 1;</code>
       * @param value The operatorType to set.
       * @return This builder for chaining.
       */
      public Builder setOperatorType(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        operatorType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>required .Polarx.PhysicalBackfill.FileManageOperator.Type operator_type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearOperatorType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        operatorType_ = 1;
        onChanged();
        return this;
      }

      private com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo tableInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder> tableInfoBuilder_;
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       * @return Whether the tableInfo field is set.
       */
      public boolean hasTableInfo() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       * @return The tableInfo.
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo getTableInfo() {
        if (tableInfoBuilder_ == null) {
          return tableInfo_ == null ? com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance() : tableInfo_;
        } else {
          return tableInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public Builder setTableInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo value) {
        if (tableInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tableInfo_ = value;
          onChanged();
        } else {
          tableInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public Builder setTableInfo(
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder builderForValue) {
        if (tableInfoBuilder_ == null) {
          tableInfo_ = builderForValue.build();
          onChanged();
        } else {
          tableInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public Builder mergeTableInfo(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo value) {
        if (tableInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
              tableInfo_ != null &&
              tableInfo_ != com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance()) {
            tableInfo_ =
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.newBuilder(tableInfo_).mergeFrom(value).buildPartial();
          } else {
            tableInfo_ = value;
          }
          onChanged();
        } else {
          tableInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public Builder clearTableInfo() {
        if (tableInfoBuilder_ == null) {
          tableInfo_ = null;
          onChanged();
        } else {
          tableInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder getTableInfoBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getTableInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder getTableInfoOrBuilder() {
        if (tableInfoBuilder_ != null) {
          return tableInfoBuilder_.getMessageOrBuilder();
        } else {
          return tableInfo_ == null ?
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.getDefaultInstance() : tableInfo_;
        }
      }
      /**
       * <code>optional .Polarx.PhysicalBackfill.TableInfo table_info = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder>
      getTableInfoFieldBuilder() {
        if (tableInfoBuilder_ == null) {
          tableInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfo.Builder, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.TableInfoOrBuilder>(
              getTableInfo(),
              getParentForChildren(),
              isClean());
          tableInfo_ = null;
        }
        return tableInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Polarx.PhysicalBackfill.FileManageOperator)
    }

    // @@protoc_insertion_point(class_scope:Polarx.PhysicalBackfill.FileManageOperator)
    private static final com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator();
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FileManageOperator>
        PARSER = new com.google.protobuf.AbstractParser<FileManageOperator>() {
      @java.lang.Override
      public FileManageOperator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FileManageOperator(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FileManageOperator> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FileManageOperator> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperator getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface FileManageOperatorResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Polarx.PhysicalBackfill.FileManageOperatorResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required bool result = 1;</code>
     * @return Whether the result field is set.
     */
    boolean hasResult();
    /**
     * <code>required bool result = 1;</code>
     * @return The result.
     */
    boolean getResult();

    /**
     * <code>optional string detail = 2;</code>
     * @return Whether the detail field is set.
     */
    boolean hasDetail();
    /**
     * <code>optional string detail = 2;</code>
     * @return The detail.
     */
    java.lang.String getDetail();
    /**
     * <code>optional string detail = 2;</code>
     * @return The bytes for detail.
     */
    com.google.protobuf.ByteString
    getDetailBytes();
  }
  /**
   * Protobuf type {@code Polarx.PhysicalBackfill.FileManageOperatorResponse}
   */
  public  static final class FileManageOperatorResponse extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:Polarx.PhysicalBackfill.FileManageOperatorResponse)
      FileManageOperatorResponseOrBuilder {
    private static final long serialVersionUID = 0L;
    // Use FileManageOperatorResponse.newBuilder() to construct.
    private FileManageOperatorResponse(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private FileManageOperatorResponse() {
      detail_ = "";
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new FileManageOperatorResponse();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private FileManageOperatorResponse(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {
            bitField0_ |= 0x00000001;
            result_ = input.readBool();
            break;
          }
          case 18: {
            com.google.protobuf.ByteString bs = input.readBytes();
            bitField0_ |= 0x00000002;
            detail_ = bs;
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
    getDescriptor() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileManageOperatorResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
    internalGetFieldAccessorTable() {
      return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileManageOperatorResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse.Builder.class);
    }

    private int bitField0_;
    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean result_;
    /**
     * <code>required bool result = 1;</code>
     * @return Whether the result field is set.
     */
    public boolean hasResult() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>required bool result = 1;</code>
     * @return The result.
     */
    public boolean getResult() {
      return result_;
    }

    public static final int DETAIL_FIELD_NUMBER = 2;
    private volatile java.lang.Object detail_;
    /**
     * <code>optional string detail = 2;</code>
     * @return Whether the detail field is set.
     */
    public boolean hasDetail() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional string detail = 2;</code>
     * @return The detail.
     */
    public java.lang.String getDetail() {
      java.lang.Object ref = detail_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          detail_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string detail = 2;</code>
     * @return The bytes for detail.
     */
    public com.google.protobuf.ByteString
    getDetailBytes() {
      java.lang.Object ref = detail_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        detail_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeBool(1, result_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, detail_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, result_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, detail_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
        return true;
      }
      if (!(obj instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse)) {
        return super.equals(obj);
      }
      com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse other = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse) obj;

      if (hasResult() != other.hasResult()) return false;
      if (hasResult()) {
        if (getResult()
            != other.getResult()) return false;
      }
      if (hasDetail() != other.hasDetail()) return false;
      if (hasDetail()) {
        if (!getDetail()
            .equals(other.getDetail())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasResult()) {
        hash = (37 * hash) + RESULT_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getResult());
      }
      if (hasDetail()) {
        hash = (37 * hash) + DETAIL_FIELD_NUMBER;
        hash = (53 * hash) + getDetail().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Polarx.PhysicalBackfill.FileManageOperatorResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Polarx.PhysicalBackfill.FileManageOperatorResponse)
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileManageOperatorResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileManageOperatorResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse.class, com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse.Builder.class);
      }

      // Construct using com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
            .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        result_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        detail_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
      getDescriptorForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.internal_static_Polarx_PhysicalBackfill_FileManageOperatorResponse_descriptor;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse getDefaultInstanceForType() {
        return com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse.getDefaultInstance();
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse build() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse buildPartial() {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse result = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.result_ = result_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          to_bitField0_ |= 0x00000002;
        }
        result.detail_ = detail_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse) {
          return mergeFrom((com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse other) {
        if (other == com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasDetail()) {
          bitField0_ |= 0x00000002;
          detail_ = other.detail_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        if (!hasResult()) {
          return false;
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private boolean result_ ;
      /**
       * <code>required bool result = 1;</code>
       * @return Whether the result field is set.
       */
      public boolean hasResult() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required bool result = 1;</code>
       * @return The result.
       */
      public boolean getResult() {
        return result_;
      }
      /**
       * <code>required bool result = 1;</code>
       * @param value The result to set.
       * @return This builder for chaining.
       */
      public Builder setResult(boolean value) {
        bitField0_ |= 0x00000001;
        result_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required bool result = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000001);
        result_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object detail_ = "";
      /**
       * <code>optional string detail = 2;</code>
       * @return Whether the detail field is set.
       */
      public boolean hasDetail() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional string detail = 2;</code>
       * @return The detail.
       */
      public java.lang.String getDetail() {
        java.lang.Object ref = detail_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            detail_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string detail = 2;</code>
       * @return The bytes for detail.
       */
      public com.google.protobuf.ByteString
      getDetailBytes() {
        java.lang.Object ref = detail_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          detail_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string detail = 2;</code>
       * @param value The detail to set.
       * @return This builder for chaining.
       */
      public Builder setDetail(
          java.lang.String value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        detail_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string detail = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearDetail() {
        bitField0_ = (bitField0_ & ~0x00000002);
        detail_ = getDefaultInstance().getDetail();
        onChanged();
        return this;
      }
      /**
       * <code>optional string detail = 2;</code>
       * @param value The bytes for detail to set.
       * @return This builder for chaining.
       */
      public Builder setDetailBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        detail_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:Polarx.PhysicalBackfill.FileManageOperatorResponse)
    }

    // @@protoc_insertion_point(class_scope:Polarx.PhysicalBackfill.FileManageOperatorResponse)
    private static final com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse();
    }

    public static com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<FileManageOperatorResponse>
        PARSER = new com.google.protobuf.AbstractParser<FileManageOperatorResponse>() {
      @java.lang.Override
      public FileManageOperatorResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new FileManageOperatorResponse(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<FileManageOperatorResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<FileManageOperatorResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.mysql.cj.polarx.protobuf.PolarxPhysicalBackfill.FileManageOperatorResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_Polarx_PhysicalBackfill_TableInfo_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Polarx_PhysicalBackfill_TableInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_Polarx_PhysicalBackfill_FileInfo_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Polarx_PhysicalBackfill_FileInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_Polarx_PhysicalBackfill_DiskInfo_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Polarx_PhysicalBackfill_DiskInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_Polarx_PhysicalBackfill_GetFileInfoOperator_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Polarx_PhysicalBackfill_GetFileInfoOperator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_Polarx_PhysicalBackfill_TransferFileDataOperator_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Polarx_PhysicalBackfill_TransferFileDataOperator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_Polarx_PhysicalBackfill_FileManageOperator_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Polarx_PhysicalBackfill_FileManageOperator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
      internal_static_Polarx_PhysicalBackfill_FileManageOperatorResponse_descriptor;
  private static final
  com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_Polarx_PhysicalBackfill_FileManageOperatorResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
  getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
        "\n\036polarx_physical_backfill.proto\022\027Polarx" +
            ".PhysicalBackfill\"\241\001\n\tTableInfo\022\024\n\014table" +
            "_schema\030\001 \002(\t\022\022\n\ntable_name\030\002 \002(\t\022\023\n\013par" +
            "titioned\030\003 \002(\010\022\037\n\027physical_partition_nam" +
            "e\030\004 \003(\t\0224\n\tfile_info\030\005 \003(\0132!.Polarx.Phys" +
            "icalBackfill.FileInfo\"\203\001\n\010FileInfo\022\021\n\tdi" +
            "rectory\030\001 \002(\t\022\021\n\tfile_name\030\002 \002(\t\022\030\n\016part" +
            "ition_name\030\003 \002(\t:\000\022\021\n\tdata_size\030\004 \001(\004\022\021\n" +
            "\texistence\030\005 \001(\010\022\021\n\ttemp_file\030\006 \001(\010\"W\n\010D" +
            "iskInfo\022\021\n\tdirectory\030\001 \002(\t\022\022\n\ntotal_size" +
            "\030\002 \001(\004\022\021\n\tfree_size\030\003 \001(\004\022\021\n\tused_size\030\004" +
            " \001(\004\"\245\003\n\023GetFileInfoOperator\022H\n\roperator" +
            "_type\030\001 \002(\01621.Polarx.PhysicalBackfill.Ge" +
            "tFileInfoOperator.Type\0226\n\ntable_info\030\002 \001" +
            "(\0132\".Polarx.PhysicalBackfill.TableInfo\0224" +
            "\n\tdisk_info\030\003 \001(\0132!.Polarx.PhysicalBackf" +
            "ill.DiskInfo\"\325\001\n\004Type\022\034\n\030CHECK_SRC_FILE_" +
            "EXISTENCE\020\001\022\034\n\030CHECK_TAR_FILE_EXISTENCE\020" +
            "\002\022\023\n\017GET_TAR_IBD_DIR\020\003\022\024\n\020GET_SRC_FILE_L" +
            "EN\020\004\022\032\n\026GET_SRC_DIR_FREE_SPACE\020\005\022\032\n\026GET_" +
            "TAR_DIR_FREE_SPACE\020\006\022\030\n\024GET_SRC_IBD_TEMP" +
            "_DIR\020\007\022\024\n\020GET_TAR_FILE_LEN\020\010\"\305\002\n\030Transfe" +
            "rFileDataOperator\022M\n\roperator_type\030\001 \002(\016" +
            "26.Polarx.PhysicalBackfill.TransferFileD" +
            "ataOperator.Type\0224\n\tfile_info\030\002 \002(\0132!.Po" +
            "larx.PhysicalBackfill.FileInfo\0224\n\tdisk_i" +
            "nfo\030\003 \001(\0132!.Polarx.PhysicalBackfill.Disk" +
            "Info\022\022\n\nbuffer_len\030\004 \002(\004\022\016\n\006buffer\030\005 \001(\014" +
            "\022\016\n\006offset\030\006 \002(\004\":\n\004Type\022\031\n\025GET_DATA_FRO" +
            "M_SRC_IBD\020\001\022\027\n\023PUT_DATA_TO_TAR_IBD\020\002\"\340\002\n" +
            "\022FileManageOperator\022G\n\roperator_type\030\001 \002" +
            "(\01620.Polarx.PhysicalBackfill.FileManageO" +
            "perator.Type\0226\n\ntable_info\030\002 \001(\0132\".Polar" +
            "x.PhysicalBackfill.TableInfo\"\310\001\n\004Type\022\032\n" +
            "\026CREATE_TEMP_DIR_IN_SRC\020\001\022\037\n\033COPY_IBD_TO" +
            "_TEMP_DIR_IN_SRC\020\002\022#\n\037DELETE_IBD_FROM_TE" +
            "MP_DIR_IN_SRC\020\003\022\026\n\022FLUSH_TABLE_IN_SRC\020\004\022" +
            "\027\n\023UNLOCK_TABLE_IN_SRC\020\005\022\032\n\026DELETE_TEMP_" +
            "DIR_IN_SRC\020\006\022\021\n\rFALLOCATE_IBD\020\007\"<\n\032FileM" +
            "anageOperatorResponse\022\016\n\006result\030\001 \002(\010\022\016\n" +
            "\006detail\030\002 \001(\tB\036\n\034com.mysql.cj.polarx.pro" +
            "tobuf"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
        .internalBuildGeneratedFileFrom(descriptorData,
            new com.google.protobuf.Descriptors.FileDescriptor[] {
            });
    internal_static_Polarx_PhysicalBackfill_TableInfo_descriptor =
        getDescriptor().getMessageTypes().get(0);
    internal_static_Polarx_PhysicalBackfill_TableInfo_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Polarx_PhysicalBackfill_TableInfo_descriptor,
        new java.lang.String[] { "TableSchema", "TableName", "Partitioned", "PhysicalPartitionName", "FileInfo", });
    internal_static_Polarx_PhysicalBackfill_FileInfo_descriptor =
        getDescriptor().getMessageTypes().get(1);
    internal_static_Polarx_PhysicalBackfill_FileInfo_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Polarx_PhysicalBackfill_FileInfo_descriptor,
        new java.lang.String[] { "Directory", "FileName", "PartitionName", "DataSize", "Existence", "TempFile", });
    internal_static_Polarx_PhysicalBackfill_DiskInfo_descriptor =
        getDescriptor().getMessageTypes().get(2);
    internal_static_Polarx_PhysicalBackfill_DiskInfo_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Polarx_PhysicalBackfill_DiskInfo_descriptor,
        new java.lang.String[] { "Directory", "TotalSize", "FreeSize", "UsedSize", });
    internal_static_Polarx_PhysicalBackfill_GetFileInfoOperator_descriptor =
        getDescriptor().getMessageTypes().get(3);
    internal_static_Polarx_PhysicalBackfill_GetFileInfoOperator_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Polarx_PhysicalBackfill_GetFileInfoOperator_descriptor,
        new java.lang.String[] { "OperatorType", "TableInfo", "DiskInfo", });
    internal_static_Polarx_PhysicalBackfill_TransferFileDataOperator_descriptor =
        getDescriptor().getMessageTypes().get(4);
    internal_static_Polarx_PhysicalBackfill_TransferFileDataOperator_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Polarx_PhysicalBackfill_TransferFileDataOperator_descriptor,
        new java.lang.String[] { "OperatorType", "FileInfo", "DiskInfo", "BufferLen", "Buffer", "Offset", });
    internal_static_Polarx_PhysicalBackfill_FileManageOperator_descriptor =
        getDescriptor().getMessageTypes().get(5);
    internal_static_Polarx_PhysicalBackfill_FileManageOperator_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Polarx_PhysicalBackfill_FileManageOperator_descriptor,
        new java.lang.String[] { "OperatorType", "TableInfo", });
    internal_static_Polarx_PhysicalBackfill_FileManageOperatorResponse_descriptor =
        getDescriptor().getMessageTypes().get(6);
    internal_static_Polarx_PhysicalBackfill_FileManageOperatorResponse_fieldAccessorTable = new
        com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_Polarx_PhysicalBackfill_FileManageOperatorResponse_descriptor,
        new java.lang.String[] { "Result", "Detail", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
